services:
  # ----------------- Databases -----------------
  user_db:
    image: postgres
    container_name: user_db
    environment:
      POSTGRES_USER: user_admin
      POSTGRES_PASSWORD: user_password
      POSTGRES_DB: userdb
    volumes:
      - user_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - microservices-net

  # ----------- Keycloak ----------------------------
  keycloak_db:
    image: postgres
    container_name: keycloak_db
    restart: always
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloakpassword
      POSTGRES_DB: keycloak
    volumes:
      - keycloak_data:/var/lib/postgresql/data  # Persistance des données
    ports:
      - "5437:5432"
    networks:
      - microservices-net

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.2
    container_name: keycloak
    restart: always
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak_db  # Service PostgreSQL dédié à Keycloak
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloakpassword
      KC_HOSTNAME: localhost
    ports:
      - "9090:8080"
    command: [ "start-dev" ]
    depends_on:
      - keycloak_db  # Attente de la base Keycloak avant de démarrer
    networks:
      - microservices-net

  # ----------------- Autres bases de données -----------------
  project_db:
    image: postgres
    container_name: project_db
    environment:
      POSTGRES_USER: project_admin
      POSTGRES_PASSWORD: project_password
      POSTGRES_DB: projectdb
    volumes:
      - project_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - microservices-net

  financial_db:
    image: postgres
    container_name: financial_db
    environment:
      POSTGRES_USER: financial_admin
      POSTGRES_PASSWORD: financial_password
      POSTGRES_DB: financialdb
    volumes:
      - financial_data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      - microservices-net

  inspection_db:
    image: mongo
    container_name: inspection_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: inspection_admin
      MONGO_INITDB_ROOT_PASSWORD: inspection_password
    volumes:
      - inspection_data:/data/db
    ports:
      - "27018:27017"
    networks:
      - microservices-net

  timesheet_db:
    image: mongo
    container_name: timesheet_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: timesheet_admin
      MONGO_INITDB_ROOT_PASSWORD: timesheet_password
    volumes:
      - timesheet_data:/data/db
    ports:
      - "27019:27017"
    networks:
      - microservices-net

  procurement_db:
    image: postgres
    container_name: procurement_db
    environment:
      POSTGRES_USER: procurement_admin
      POSTGRES_PASSWORD: procurement_password
      POSTGRES_DB: procurementdb
    volumes:
      - procurement_data:/var/lib/postgresql/data
    ports:
      - "5436:5432"
    networks:
      - microservices-net

  # ---------------- Monitoring & Tools ----------------
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@tensai.com
      PGADMIN_DEFAULT_PASSWORD: tensai
    ports:
      - "5050:80"
    networks:
      - microservices-net

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: tensai
      ME_CONFIG_MONGODB_ADMINPASSWORD: tensai
    ports:
      - "8081:8081"
    depends_on:
      - inspection_db
      - timesheet_db
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge

volumes:
  user_data:
  project_data:
  financial_data:
  inspection_data:
  timesheet_data:
  procurement_data:
  keycloak_data:
