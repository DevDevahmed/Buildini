services:
  # ----------------- Databases -----------------
  user_db:
    image: postgres
    container_name: user_db
    environment:
      POSTGRES_USER: user_admin
      POSTGRES_PASSWORD: user_password
      POSTGRES_DB: userdb
    volumes:
      - user_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - microservices-net

  project_db:
    image: postgres
    container_name: project_db
    environment:
      POSTGRES_USER: project_admin
      POSTGRES_PASSWORD: project_password
      POSTGRES_DB: projectdb
    volumes:
      - project_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - microservices-net

  financial_db:
    image: postgres
    container_name: financial_db
    environment:
      POSTGRES_USER: financial_admin
      POSTGRES_PASSWORD: financial_password
      POSTGRES_DB: financialdb
    volumes:
      - financial_data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      - microservices-net

  inspection_db:
    image: mongo
    container_name: inspection_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: inspection_admin
      MONGO_INITDB_ROOT_PASSWORD: inspection_password
    volumes:
      - inspection_data:/data/db
    ports:
      - "27018:27017"
    networks:
      - microservices-net

  timesheet_db:
    image: mongo
    container_name: timesheet_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: timesheet_admin
      MONGO_INITDB_ROOT_PASSWORD: timesheet_password
    volumes:
      - timesheet_data:/data/db
    ports:
      - "27019:27017"
    networks:
      - microservices-net

  procurement_db:
    image: postgres
    container_name: procurement_db
    environment:
      POSTGRES_USER: procurement_admin
      POSTGRES_PASSWORD: procurement_password
      POSTGRES_DB: procurementdb
    volumes:
      - procurement_data:/var/lib/postgresql/data
    ports:
      - "5436:5432"
    networks:
      - microservices-net

  # ----------------- Kafka and Zookeeper -----------------
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservices-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservices-net

  # ---------------- Monitoring & Tools ----------------
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@tensai.com
      PGADMIN_DEFAULT_PASSWORD: tensai
    ports:
      - "5050:80"
    networks:
      - microservices-net

  mail-dev:
    container_name: mail-dev-bsn
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - microservices-net

  # ----------------- FastAPI Microservice -----------------
  predictor-service:
    build:
      context: ./Backend/services/predictor-service
      dockerfile: Dockerfile
    container_name: predictor_service
    ports:
      - "8001:8001"
    volumes:
      - ./Backend/services/predictor-service/model:/app/model
    networks:
      - microservices-net

  # ----------------- Keycloak -----------------
  keycloak:
    container_name: keycloak-bsn
    image: quay.io/keycloak/keycloak:24.0.5
    ports:
      - "9090:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: dev-file
      KC_HOSTNAME: localhost
      KC_HTTP_PORT: 8080
      KC_HOSTNAME_PORT: 9090
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
    volumes:
      - keycloak_data:/opt/keycloak/data
    networks:
      - microservices-net
    command:
      - "start-dev"

networks:
  microservices-net:
    driver: bridge

volumes:
  user_data:
  project_data:
  financial_data:
  inspection_data:
  timesheet_data:
  procurement_data:
  keycloak_data: